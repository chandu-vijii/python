def permuteUnique(nums):
    def backtrack(start, end):
        if start == end:
            result.append(nums[:])
        seen = set()
        for i in range(start, end):
            if nums[i] not in seen:
                seen.add(nums[i])
                nums[start], nums[i] = nums[i], nums[start]
                backtrack(start + 1, end)
                nums[start], nums[i] = nums[i], nums[start]
    nums.sort()
    result = []
    backtrack(0, len(nums))
    return result
nums1 = [1, 1, 2]
print(permuteUnique(nums1))  # Output: [[1, 1, 2], [1, 2, 1], [2, 1, 1]]
nums2 = [1, 2, 3]
print(permuteUnique(nums2))  # Output: [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]
